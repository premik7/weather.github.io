{"ast":null,"code":"export default {\n  name: 'App',\n  data() {\n    return {\n      api_key: 'e329b302772ccbaf5525f9dcf5faa981',\n      url_base: 'https://api.openweathermap.org/data/2.5/',\n      query: '',\n      weather: {}\n    };\n  },\n  methods: {\n    fetchWeather(e) {\n      if (e.key == \"Enter\") {\n        fetch(`${this.url_base}weather?q=${this.query}&units=metric&APPID=${this.api_key}`).then(res => {\n          return res.json();\n        }).then(this.setResults);\n      }\n    },\n    setResults(results) {\n      this.weather = results;\n    },\n    dateBuilder() {\n      let d = new Date();\n      let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n      let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n      let day = days[d.getDay()];\n      let date = d.getDate();\n      let month = months[d.getMonth()];\n      let year = d.getFullYear();\n      return `${day} ${date} ${month} ${year}`;\n    }\n  }\n};","map":{"version":3,"names":["name","data","api_key","url_base","query","weather","methods","fetchWeather","e","key","fetch","then","res","json","setResults","results","dateBuilder","d","Date","months","days","day","getDay","date","getDate","month","getMonth","year","getFullYear"],"sources":["D:\\vue\\weather\\src\\App.vue"],"sourcesContent":["<template>\n  <div id=\"app\" >\n     <main>\n     <div class=\"search-box\">\n      <input type=\"text\" class=\"search-bar\" placeholder=\"search....\" v-model=\"query\" @keypress=\"fetchWeather\"/> \n     </div>\n     <div class=\"weather-wrap\" v-if=\"typeof weather.main != 'undefined'\">\n      <div class=\"location-box\">\n      <div class=\"location\"> {{ weather.name }},{{ weather.sys.country }}</div>\n      <div class=\"date\">monday 20 jan 2024</div>\n      <div class=\"weather-box\">\n        <div class=\"temp\">{{ Math.round(weather.main.temp) }}Â°c</div>\n          <div class=\"weather\">{{ weather.weather[0].main }}</div>\n      </div>\n    </div>\n     </div>\n     </main>\n  </div>\n</template>\n\n<script>\n\nexport default {\n  name: 'App',\n\n  data () {\n    return {\n      api_key: 'e329b302772ccbaf5525f9dcf5faa981',\n      url_base: 'https://api.openweathermap.org/data/2.5/',\n      query: '',\n      weather: {}\n    }\n  },\n  methods: {\n    fetchWeather (e) {\n      if (e.key == \"Enter\") {\n        fetch(`${this.url_base}weather?q=${this.query}&units=metric&APPID=${this.api_key}`)\n          .then(res => {\n            return res.json();\n          }).then(this.setResults);\n      }\n    },\n    setResults (results) {\n      this.weather = results;\n    },\n    dateBuilder () {\n      let d = new Date();\n      let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n      let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n\n      let day = days[d.getDay()];\n      let date = d.getDate();\n      let month = months[d.getMonth()];\n      let year = d.getFullYear();\n\n      return `${day} ${date} ${month} ${year}`;\n    }\n  }\n}\n  \n</script>\n\n<style>\n*{\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\nbody{\n  font-family: 'montserrat', sans-serif;\n}\n#app{\nbackground-image: url('./assets/cool.jpg');\nbackground-size:cover ;\nbackground-position: bottom;\ntransition: 0.4s;\n}\nmain{\n  min-height: 100vh;\n  padding: 25px;\n  background-image: linear-gradient(to bottom, rgba(0,0,0,0.25),rgba(0,0,0,0.75) );\n}\n.search-box{\n  width: 100%;\n  margin-bottom: 30px;\n}\n.search-box .search-bar{\ndisplay: block;\nwidth: 100%;\npadding: 15px;\ncolor: #313131;\nfont-size: 20px;\nappearance: none;\nborder: none;\noutline: none;\nbackground: none;\nbox-shadow: 0px 0px 8px rgba(0,0,0,0.25);\nbackground-color: rgba(255,255,255,0.5);\nborder-radius: 0px 16px 0px 16px;\ntransition: 0.4s;\n}\n.search-box .search-bar{\n  box-shadow:0px 0px 16px  rgba(0,0,0,0.25);\n  background-color: rgba(255,255,255,0.75);\n  border-radius: 16px 0px 16px 0px;\n}\n.location-box .location{\n  color: #fff;\n  font-size: 32px;\n  font-weight: 500;\n  text-align: center;\n  text-shadow: 1px 3px rgba(0,0,0,0.25);\n}\n.location-box .date{\n  color: #fff;\n  font-size: 20px;\n  font-weight: 300;\n  font-style: italic;\n  text-align: center;\n}\n.weather-box{\n  text-align: center;\n}\n.weather-box .temp{\n  display: inline-block;\n  padding: 10px 25px ;\n  color: #fff;\n  font-size: 102px;\n  font-weight:900;\n  text-shadow: 3px 6px rgba(0,0,0,0.25);\n  background-color: rgba(255,255,255,0.25);\n  border-radius: 16px;\n  margin: 30px 0px;\n  box-shadow: 3px 6px rgba(0,0,0,0.25);\n}\n\n.weather-box .weather{\n  color: #fff;\n  font-size: 48px;\n  font-weight: 700;\n  font-style: italic;\n  text-shadow: 3px 6px rgba(0,0,0,0.25);\n}\n\n</style>\n"],"mappings":"AAsBA,eAAe;EACbA,IAAI,EAAE,KAAK;EAEXC,IAAGA,CAAA,EAAK;IACN,OAAO;MACLC,OAAO,EAAE,kCAAkC;MAC3CC,QAAQ,EAAE,0CAA0C;MACpDC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE,CAAC;IACZ;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,YAAWA,CAAGC,CAAC,EAAE;MACf,IAAIA,CAAC,CAACC,GAAE,IAAK,OAAO,EAAE;QACpBC,KAAK,CAAE,GAAE,IAAI,CAACP,QAAS,aAAY,IAAI,CAACC,KAAM,uBAAsB,IAAI,CAACF,OAAQ,EAAC,EAC/ES,IAAI,CAACC,GAAE,IAAK;UACX,OAAOA,GAAG,CAACC,IAAI,CAAC,CAAC;QACnB,CAAC,CAAC,CAACF,IAAI,CAAC,IAAI,CAACG,UAAU,CAAC;MAC5B;IACF,CAAC;IACDA,UAASA,CAAGC,OAAO,EAAE;MACnB,IAAI,CAACV,OAAM,GAAIU,OAAO;IACxB,CAAC;IACDC,WAAUA,CAAA,EAAK;MACb,IAAIC,CAAA,GAAI,IAAIC,IAAI,CAAC,CAAC;MAClB,IAAIC,MAAK,GAAI,CAAC,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,CAAC;MACvI,IAAIC,IAAG,GAAI,CAAC,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,WAAW,EAAE,UAAU,EAAE,QAAQ,EAAE,UAAU,CAAC;MAEzF,IAAIC,GAAE,GAAID,IAAI,CAACH,CAAC,CAACK,MAAM,CAAC,CAAC,CAAC;MAC1B,IAAIC,IAAG,GAAIN,CAAC,CAACO,OAAO,CAAC,CAAC;MACtB,IAAIC,KAAI,GAAIN,MAAM,CAACF,CAAC,CAACS,QAAQ,CAAC,CAAC,CAAC;MAChC,IAAIC,IAAG,GAAIV,CAAC,CAACW,WAAW,CAAC,CAAC;MAE1B,OAAQ,GAAEP,GAAG,IAAIE,IAAI,IAAIE,KAAK,IAAIE,IAAK,EAAC;IAC1C;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}